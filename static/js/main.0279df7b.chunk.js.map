{"version":3,"sources":["images/todo.png","components/Todo.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputdata","setInputData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","className","src","todo","alt","type","placeholder","value","onChange","event","target","onClick","index","item_todo_edited","find","editItem","updatedItems","filter","deleteItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sMAAe,MAA0B,iC,eCoH1BA,EAhHF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAGMC,EAAU,WACd,GAAKR,EAEE,GAAIA,GAAaM,EACtBH,EACED,EAAMO,KAAI,SAACC,GACT,OAAIA,EAAQC,KAAOP,EACV,2BAAKM,GAAZ,IAAqBE,KAAMZ,IAEtBU,MAIXT,EAAa,IACbI,EAAc,MACdE,GAAgB,OACX,CACL,IAAMM,EAAiB,CACrBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMZ,GAERG,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBZ,EAAa,SApBbgB,MAAM,sBA+CV,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKC,IAAKC,EAAMC,IAAI,aACpB,sEAEF,sBAAKH,UAAU,WAAf,UACE,uBACEI,KAAK,OACLC,YAAY,kBACZL,UAAU,eACVM,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAWzB,EAAayB,EAAMC,OAAOH,UAEhDlB,EACC,mBAAGY,UAAU,qBAAqBU,QAASpB,IAE3C,mBAAGU,UAAU,qBAAqBU,QAASpB,OAI/C,qBAAKU,UAAU,YAAf,SACGhB,EAAMO,KAAI,SAACC,GACV,OACE,sBAAKQ,UAAU,WAAf,UACE,6BAAKR,EAAQE,OACb,sBAAKM,UAAU,WAAf,UACE,mBACEA,UAAU,sBACVU,QAAS,kBArDZ,SAACC,GAChB,IAAMC,EAAmB5B,EAAM6B,MAAK,SAACrB,GACnC,OAAOA,EAAQC,KAAOkB,KAExB5B,EAAa6B,EAAiBlB,MAC9BP,EAAcwB,GACdtB,GAAgB,GA+CiByB,CAAStB,EAAQC,OAClC,mBACEO,UAAU,2BACVU,QAAS,kBA9CV,SAACC,GAClB,IAAMI,EAAe/B,EAAMgC,QAAO,SAACxB,GACjC,OAAOA,EAAQC,KAAOkB,KAExB1B,EAAS8B,GA0CwBE,CAAWzB,EAAQC,YARTD,EAAQC,SAgB7C,qBAAKO,UAAU,YAAf,SACE,wBACEA,UAAU,eACV,oBAAkB,aAClBU,QAlDM,WAChBzB,EAAS,KA8CD,SAIE,2DC/FCiC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,EAAD,IACCC,SAASC,eAAe,SAM3BZ,M","file":"static/js/main.0279df7b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.d03f5fab.png\";","import React, { useState } from 'react';\r\nimport todo from '../images/todo.png';\r\nimport './css/style.css';\r\n\r\nconst Todo = () => {\r\n  const [inputdata, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const [isEditItem, setIsEditItem] = useState(\"\");\r\n  const [toggleButton, setToggleButton] = useState(false);\r\n\r\n  // add the items fucnction\r\n  const addItem = () => {\r\n    if (!inputdata) {\r\n      alert(\"plz fill the data\");\r\n    } else if (inputdata && toggleButton) {\r\n      setItems(\r\n        items.map((curElem) => {\r\n          if (curElem.id === isEditItem) {\r\n            return { ...curElem, name: inputdata };\r\n          }\r\n          return curElem;\r\n        })\r\n      );\r\n\r\n      setInputData(\"\");\r\n      setIsEditItem(null);\r\n      setToggleButton(false);\r\n    } else {\r\n      const myNewInputData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputdata,\r\n      };\r\n      setItems([...items, myNewInputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n  //edit the items\r\n  const editItem = (index) => {\r\n    const item_todo_edited = items.find((curElem) => {\r\n      return curElem.id === index;\r\n    });\r\n    setInputData(item_todo_edited.name);\r\n    setIsEditItem(index);\r\n    setToggleButton(true);\r\n  };\r\n\r\n  // how to delete items section\r\n  const deleteItem = (index) => {\r\n    const updatedItems = items.filter((curElem) => {\r\n      return curElem.id !== index;\r\n    });\r\n    setItems(updatedItems);\r\n  };\r\n\r\n  // remove all the elements\r\n  const removeAll = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <img src={todo} alt=\"todologo\" />\r\n            <figcaption>Add Your List Here ✌</figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"✍ Add Item\"\r\n              className=\"form-control\"\r\n              value={inputdata}\r\n              onChange={(event) => setInputData(event.target.value)}\r\n            />\r\n            {toggleButton ? (\r\n              <i className=\"fa fa-edit add-btn\" onClick={addItem}></i>\r\n            ) : (\r\n              <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n            )}\r\n          </div>\r\n          {/* show our items  */}\r\n          <div className=\"showItems\">\r\n            {items.map((curElem) => {\r\n              return (\r\n                <div className=\"eachItem\" key={curElem.id}>\r\n                  <h3>{curElem.name}</h3>\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      className=\"far fa-edit add-btn\"\r\n                      onClick={() => editItem(curElem.id)}></i>\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      onClick={() => deleteItem(curElem.id)}></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* remove all button  */}\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"Remove All\"\r\n              onClick={removeAll}>\r\n              <span> CHECK LIST</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todo from './components/Todo';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Todo/>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}